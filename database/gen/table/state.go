//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var State = newStateTable("", "state", "")

type stateTable struct {
	sqlite.Table

	// Columns
	ID     sqlite.ColumnInteger
	Winner sqlite.ColumnString
	Tries  sqlite.ColumnInteger
	People sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
	DefaultColumns sqlite.ColumnList
}

type StateTable struct {
	stateTable

	EXCLUDED stateTable
}

// AS creates new StateTable with assigned alias
func (a StateTable) AS(alias string) *StateTable {
	return newStateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StateTable with assigned schema name
func (a StateTable) FromSchema(schemaName string) *StateTable {
	return newStateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new StateTable with assigned table prefix
func (a StateTable) WithPrefix(prefix string) *StateTable {
	return newStateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new StateTable with assigned table suffix
func (a StateTable) WithSuffix(suffix string) *StateTable {
	return newStateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newStateTable(schemaName, tableName, alias string) *StateTable {
	return &StateTable{
		stateTable: newStateTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newStateTableImpl("", "excluded", ""),
	}
}

func newStateTableImpl(schemaName, tableName, alias string) stateTable {
	var (
		IDColumn       = sqlite.IntegerColumn("id")
		WinnerColumn   = sqlite.StringColumn("winner")
		TriesColumn    = sqlite.IntegerColumn("tries")
		PeopleColumn   = sqlite.IntegerColumn("people")
		allColumns     = sqlite.ColumnList{IDColumn, WinnerColumn, TriesColumn, PeopleColumn}
		mutableColumns = sqlite.ColumnList{WinnerColumn, TriesColumn, PeopleColumn}
		defaultColumns = sqlite.ColumnList{}
	)

	return stateTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Winner: WinnerColumn,
		Tries:  TriesColumn,
		People: PeopleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
